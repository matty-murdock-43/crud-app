package com.rest.demo.model;

import jakarta.persistence.*;
import lombok.*;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import java.time.LocalDate;
import java.util.UUID;

@Entity
public class Task {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(nullable = false, updatable = false, unique = true)
    private String uuid = UUID.randomUUID().toString();

    @NotBlank
    private String name;
    private String description;

    @NotNull
    private TaskStatus taskStatus;

    private LocalDate dueDate;

    @NotNull
    @ManyToOne(optional = false) //  optional = false ==> Indicates that the relationship is not optional; Effect on DB --> When optional = false is used, the database schema generated by JPA will include a NOT NULL constraint on the foreign key column in the child table.
    private Campaign campaign;

    @ManyToOne
    private Worker assignee;



    public Task(String uuid, String name, String description, TaskStatus taskStatus, LocalDate dueDate, Campaign campaign, Worker assignee) {
        this.uuid = uuid;
        this.name = name;
        this.description = description;
        this.taskStatus = taskStatus;
        this.dueDate = dueDate;
        this.campaign = campaign;
        this.assignee = assignee;
    }

    @Override
    public String toString() {
        return "Task{" +
                "id=" + id +
                ", uuid='" + uuid + '\'' +
                ", name='" + name + '\'' +
                ", description='" + description + '\'' +
                ", taskStatus=" + taskStatus +
                ", dueDate=" + dueDate +
                ", campaign=" + campaign +
                ", assignee=" + assignee +
                '}';
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getUuid() {
        return uuid;
    }

    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

    public @NotBlank String getName() {
        return name;
    }

    public void setName(@NotBlank String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public @NotNull TaskStatus getTaskStatus() {
        return taskStatus;
    }

    public void setTaskStatus(@NotNull TaskStatus taskStatus) {
        this.taskStatus = taskStatus;
    }

    public LocalDate getDueDate() {
        return dueDate;
    }

    public void setDueDate(LocalDate dueDate) {
        this.dueDate = dueDate;
    }

    public @NotNull Campaign getCampaign() {
        return campaign;
    }

    public void setCampaign(@NotNull Campaign campaign) {
        this.campaign = campaign;
    }

    public Worker getAssignee() {
        return assignee;
    }

    public void setAssignee(Worker assignee) {
        this.assignee = assignee;
    }

    public Task() {
    }
}
